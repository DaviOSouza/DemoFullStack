@model IEnumerable<FullStack.WebDemo.Models.Produto>

@{
    ViewData["Title"] = "Lista de Produtos";

    int pageSize = ViewBag.PageSize;
    int pageNumber = ViewBag.PageNumber;
    string nome = ViewBag.Nome;
    int totalPages = ViewBag.TotalPages;
    int totalRecords = ViewBag.TotalRecords;
}

<div class="container mt-4">
    <h1 class="text-center mb-4">@ViewData["Title"]</h1>

    <div class="row mb-3">
        <div class="col-md-6">
            <a asp-action="Create" class="btn btn-success">Criar Novo</a>
        </div>
        <div class="col-md-6 d-flex justify-content-end align-items-center">
            <form class="form-inline d-flex align-items-center" method="get" action="@Url.Action("Index")">
                <input type="text" id="nome" name="nome" value="@nome" class="form-control me-2" placeholder="Nome" />
                <button type="submit" class="btn btn-primary me-2">Filtrar</button>
                <a href="@Url.Action("Index")" class="btn btn-secondary">Resetar</a>
            </form>
        </div>
    </div>

    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Id)</th>
                <th>@Html.DisplayNameFor(model => model.Nome)</th>
                <th>@Html.DisplayNameFor(model => model.NomeCategoria)</th>
                <th>@Html.DisplayNameFor(model => model.Quantidade)</th>
                <th>@Html.DisplayNameFor(model => model.Preco)</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Id)</td>
                    <td>@Html.DisplayFor(modelItem => item.Nome)</td>
                    <td>@Html.DisplayFor(modelItem => item.NomeCategoria)</td>
                    <td>@Html.DisplayFor(modelItem => item.Quantidade)</td>
                    <td>R$ @item.Preco.ToString("F2")</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Editar</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Detalhes</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Deletar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">

            <li class="page-item"> <a class="page-link" href="@Url.Action("Index", new { pageNumber = 1, pageSize = pageSize, nome = nome })">Primeiro</a> </li>

            @if (pageNumber > 1)
            {
                <li class="page-item"> <a class="page-link" href="@Url.Action("Index", new { pageNumber = pageNumber - 1, pageSize = pageSize, nome = nome })">Anterior</a> </li>
            }
            else
            {
                <li class="page-item disabled"> <span class="page-link">Anterior</span> </li>
            }

            <li class="page-item active"> <a class="page-link" href="@Url.Action("Index", new { pageNumber = pageNumber, pageSize = pageSize, nome = nome })">@pageNumber </a> </li>

            @if (pageNumber < totalPages)
            {
                <li class="page-item"> <a class="page-link" href="@Url.Action("Index", new { pageNumber = pageNumber + 1, pageSize = pageSize, nome = nome })">Próximo</a> </li>
            }
            else
            {
                <li class="page-item disabled"> <span class="page-link">Próximo</span> </li>
            }

            <li class="page-item"> <a class="page-link" href="@Url.Action("Index", new { pageNumber = totalPages, pageSize = pageSize, nome = nome })">Último</a> </li>
        </ul>
    </nav>
</div>
